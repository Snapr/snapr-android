<?xml version="1.0" encoding="UTF-8"?>
<project name="SnaprKit" default="help">

    <!-- The local.properties file is created and updated by the 'android' tool.
         It contains the path to the SDK. It should *NOT* be checked into
         Version Control Systems. -->
    <loadproperties srcFile="local.properties" />

    <!-- The ant.properties file can be created by you. It is only edited by the
         'android' tool to add properties to it.
         This is the place to change some Ant specific build properties.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         For other overridable properties, look at the beginning of the rules
         files in the SDK, at tools/ant/build.xml

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="ant.properties" />

    <!-- The project.properties file is created and updated by the 'android'
         tool, as well as ADT.

         This contains project specific properties such as project target, and library
         dependencies. Lower level build properties are stored in ant.properties
         (or in .classpath for Eclipse projects).

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project'"
            unless="sdk.dir"
    />


<!-- extension targets. Uncomment the ones where you want to do custom work
     in between standard targets -->

    <target name="help">
        <!-- displays starts at col 13
              |13                                                              80| -->
        <echo>Android Ant Build. Available targets:</echo>
        <echo>   help:      Displays this help.</echo>
        <echo>   clean:     Removes output files created by other targets.</echo>
        <echo>              The 'all' target can be used to clean dependencies</echo>
        <echo>              (tested projects and libraries)at the same time</echo>
        <echo>              using: 'ant all clean'</echo>
        <echo>   debug:     Builds the application and signs it with a debug key.</echo>
        <echo>   release:   Builds the application. The generated apk file must be</echo>
        <echo>              signed before it is published.</echo>
        <echo>   instrument:Builds an instrumented package and signs it with a</echo>
        <echo>              debug key.</echo>
        <echo>   test:      Runs the tests. Project must be a test project and</echo>
        <echo>              must have been built. Typical usage would be:</echo>
        <echo>                  ant [emma] debug installt test</echo>
        <echo>   emma:      Transiently enables code coverage for subsequent</echo>
        <echo>              targets.</echo>
        <echo>   install:   Installs the newly build package. Must either be used</echo>
        <echo>              in conjunction with a build target (debug/release/</echo>
        <echo>              instrument) or with the proper suffix indicating</echo>
        <echo>              which package to install (see below).</echo>
        <echo>              If the application was previously installed, the</echo>
        <echo>              application is reinstalled if the signature matches.</echo>
        <echo>   installd:  Installs (only) the debug package.</echo>
        <echo>   installr:  Installs (only) the release package.</echo>
        <echo>   installi:  Installs (only) the instrumented package.</echo>
        <echo>   installt:  Installs (only) the test and tested packages.</echo>
        <echo>   uninstall: Uninstalls the application from a running emulator or</echo>
        <echo>              device.</echo>
        <echo>   set-build- Configure the library for minimum build. This is used</echo>
        <echo>   min:       to perform HTML debugging using files from the SDCARD.</echo>
        <echo>   set-build- Configure the library for debug build. This is used</echo>
        <echo>   debug:     to perform Java debugging.</echo>
        <echo>   set-build- Configure the library for release build. This disables</echo>
        <echo>   release:   HTML and Java debugging.</echo>
    </target>

	<target name="set-build-min">
		<!-- Set LOG_MODE to true Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean LOG_MODE = (.*);" 
			replace="public static final boolean LOG_MODE = true;" />
		
		<!-- Set HTML_DEBUG to true Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean HTML_DEBUG = (.*);" 
			replace="public static final boolean HTML_DEBUG = true;" />
		
    </target>

	<target name="set-build-debug">
		<!-- Set LOG_MODE to true Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean LOG_MODE = (.*);" 
			replace="public static final boolean LOG_MODE = true;" />
		
		<!-- Set HTML_DEBUG to false Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean HTML_DEBUG = (.*);" 
			replace="public static final boolean HTML_DEBUG = false;" />
    </target>

	<target name="set-build-release">
		<!-- Set LOG_MODE to false Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean LOG_MODE = (.*);" 
			replace="public static final boolean LOG_MODE = false;" />
		
		<!-- Set HTML_DEBUG to false Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean HTML_DEBUG = (.*);" 
			replace="public static final boolean HTML_DEBUG = false;" />
    </target>

	<target name="set-lib-internal">
		<!-- Set FEATURE_AVIARY_SDK to true Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean FEATURE_AVIARY_SDK = (.*);" 
			replace="public static final boolean FEATURE_AVIARY_SDK = true;" />
    </target>

	<target name="set-lib-external">
		<!-- Set FEATURE_AVIARY_SDK to false Global.java file -->
		<replaceregexp file="${source.dir}/pr/sna/snaprkit/Global.java" 
			match="public static final boolean FEATURE_AVIARY_SDK = (.*);" 
			replace="public static final boolean FEATURE_AVIARY_SDK = false;" />
    </target>

<!--
    <target name="-pre-build">
    </target>

    <target name="-pre-compile">
    </target>

    /* This is typically used for code obfuscation.
       Compiled code location: ${out.classes.absolute.dir}
       If this is not done in place, override ${out.dex.input.absolute.dir} */
    <target name="-post-compile">
    </target>
-->

    <!-- Import the actual build file.

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <import> task.
             - customize it to your needs.
         - Customize the whole content of build.xml
             - copy/paste the content of the rules files (minus the top node)
               into this file, replacing the <import> task.
             - customize to your needs.

         ***********************
         ****** IMPORTANT ******
         ***********************
         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
         in order to avoid having your file be overridden by tools such as "android update project"
    -->
    <!-- version-tag: 1 -->
    <import file="${sdk.dir}/tools/ant/build.xml" />

</project>
